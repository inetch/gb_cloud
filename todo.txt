Структура
1. Клиент
	1.1 GUI
		1.1.1 Залогиниться
		1.1.2 Зарегистрироваться
		1.1.3 Разлогиниться
		1.1.4 Отправить файл на сервер
		1.1.5 Получить и отобразить список файлов
		1.1.6 Скачать файл с сервера
		1.1.7 Удалить файл с сервера
		1.1.8 Расшарить файл с другими юзерами (?)
	1.2 Взаимодействие с сервером
		1.2.1 Авторизация
			1.2.1.1 Зарегистрировать юзера (ошибки: такой юзер уже есть, ошибка сервера)
			1.2.1.2 Залогиниться (ошибки: неправильный юзернейм, непрвильный пароль, юзер забанен)
			1.2.1.3 Разлогиниться (ошибки: ?)
		1.2.2 Передача данных (клиент -> сервер)
			1.2.2.1 Создание папки на сервере (ошибки: неправильный путь, такая папка уже есть)
			1.2.2.2 Удаление папки на сервере (ошибки: неправильный путь, папки нет, папка не пуста)
			1.2.2.3 Отправка файла на сервер (м.б. архивировать?); ошибки: такой файл уже есть (в зависимости от того, что мы хоти; если надо обновить файл, тогда успешно заменяем его, если создаём новый - то ошибка), неправильный путь, нет локального файла
			1.2.2.4 Удаление файл на сервере (ошибки: файла нет, не хватает прав)
			1.2.2.5 Переименование/перенос файла
		1.2.3 Передача данных (сервер -> клиент)
			1.2.3.1 Передача списка файлов (иерархия); ошибки: непредвиденные
			1.2.3.1 Передача файла; ошибки - не хватает места на клиенте
	1.3 Логгирование
		1.3.1 В файл
		1.3.2 Уровни логгирования
2. Сервер
	2.1 GUI - нафиг, CLI
	2.2 Авторизация
		2.2.1 БД (sqlLite? mySQL? Postgresql?). Ошибки: нет подключения к БД
			2.2.1.1 Юзеры: логины, хэши паролей, лимиты хранения
			2.2.1.2 Логи: кто, когда заходил, что делал, какие файлы
			2.2.1.3 Доступ сторонних (не владельцев) к чужим фалам?
			2.2.1.4 Мб тегирование файлов? для каталогизации
		2.2.2 Регистрация юзера (запись в бд). Ошибки: такой юзер уже есть
		2.2.3 Аутентификация: проверка хэша пароля. Ошибки: нет юзера, пароль неверен
	2.3 Взаимодействие с клиентом
		2.3.1 Ожидание подключения (слушаем порт, создаём сокет)
		2.3.2 Авторизация или регистрация (оишбки: есть юзер, слишком много юзеров)
		2.3.3 Приём команды на создание папки (см. 1.2.2.1). + ошибка: невозможно создать папку
		2.3.4 Приём команды на удаление папки (см. 1.2.2.2)
		2.3.5 Приём файла от клиента (разаривировать? - можно хранить сжатым) (см. 1.2.2.3). Если файл есть, то в зависимости от команды - обновить (успешно обновляем), создать - ошибка. Ошибки: нет места на сервере, превышен лимит для юзера
		2.3.6 Отправка файла клиенту. Ошибки: нет файла, нет прав на файл (если файл чужой).
			2.3.6.1 Клиент может прервать скачку файла с сервера по своим причинам (не хватает места, например)
		2.3.7 Приём команды на отправку структуры папок
		2.3.8 Приём команды на переименование/перенос файла
	2.4 Администрирование
		2.4.1 Бан юзеров?
	2.5 Логгирование
		2.5.1 В файл - происходящее в приложении
		2.5.2 в БД - - кто когда залогинился, какие файлы передавал
3. Структура БД сервера:
	3.1. Юзеры с хэшами паролей
	3.2. Файлы (связка с юзерами, путь в ФС)
	3.3. Логи (юзер, файл)
	3.4. Тэги файлов?
	3.5. Шаринг файлов?
4. Протокол взаимодействия
	4.1 Команды
		4.1.1 Зарегистрировать пользователя
			4.1.1.1 Имя пользователя
			4.1.1.2 Хэш пароля
		4.1.2 Авторизовать пользователя
			4.1.2.1 Имя пользователя
			4.1.2.2 Хэш пароля
		4.1.3 Прервать сессию (разлогинить)
		4.1.4 Передача файла (клиент -> сервер) с заменой
			4.1.4.1 Имя файла с путём
			4.1.4.2 Размер
			4.1.4.3 Сам бинарный файл
		4.1.5 Передача нового файла (клиент -> сервер) (ошибка, если файл есть)
			4.1.5.1 Имя файла с путём
			4.1.5.2 Размер
			4.1.5.3 Сам бинарный файл
		4.1.6 Передача файла (сервер -> клиент)
			4.1.6.1 Размер
		4.1.7 Удаление файла
			4.1.7.1 Имя файла с путём
		4.1.8 Запрос структуры папок
		4.1.9 Переименование файла (новое имя или новый путь)
			4.1.9.1 Старое имя с путём
			4.1.9.2 Новое имя с путём
		4.1.10 (?) Тегирование файла
			4.1.10.1 Имя файла с путём
			4.1.10.2 Список тегов
		4.1.11 (?) Шаринг файла
			4.1.11.1 Имя файла с путём
			4.1.11.2 Список ИД юзеров
				4.1.11.2.1 Юзер Ид
				4.1.11.2.2 Права на файл
